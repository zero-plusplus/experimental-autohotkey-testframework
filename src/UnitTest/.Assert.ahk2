class Assert extends UnitTest.rule.Tester {
  /**
   * @param {boolean} expression
   * @param {string} [description := ""]
   */
  ok(expression, description := "") {
    this.result(UnitTest.Util.toBoolean(expression), description)
  }
  /**
   * @param {boolean} expression
   * @param {string} [description := ""]
   */
  notOk(expression, description := "") {
    this.result(!expression, description)
  }
  /**
   * @param {any} a
   * @param {any} b
   * @param {string} [description := ""]
   */
  equals(a, b, description := "") {
    this.result(UnitTest.Util.equals(a, b), description)
  }
  /**
   * @param {any} a
   * @param {any} b
   * @param {string} [description := ""]
   */
  equalsIgnoreCase(a, b, description := "") {
    this.result(UnitTest.Util.equalsIgnoreCase(a, b), description)
  }
  /**
   * @param {any} a
   * @param {any} b
   * @param {string} [description := ""]
   */
  deepEquals(a, b, description := "") {
    this.result(UnitTest.Util.deepEquals(a, b), description)
  }
  /**
   * @param {any} a
   * @param {any} b
   * @param {string} [description := ""]
   */
  notEquals(a, b, description := "") {
    this.result(a !== b, description)
  }
  /**
   * @param {any} a
   * @param {any} b
   * @param {string} [description := ""]
   */
  notEqualsIgnoreCase(a, b, description := "") {
    this.result(!UnitTest.Util.equalsIgnoreCase(a, b), description)
  }
  /**
   * @param {any} a
   * @param {any} b
   * @param {string} [description := ""]
   */
  notDeepEquals(a, b, description := "") {
    this.result(!UnitTest.Util.deepEquals(a, b), description)
  }
}